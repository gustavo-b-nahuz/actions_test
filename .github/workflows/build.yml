name: C++ Build

on:
  workflow_dispatch:
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Set branch name
        id: set-branch-name
        run: |
          if [ "${{ github.event_name }}" = "pull_request" ]; then
            echo "branch_name=${{ github.head_ref }}" >> $GITHUB_ENV
          elif [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            branch=$(echo "${{ github.ref }}" | sed 's|refs/heads/||')
            echo "branch_name=${branch}" >> $GITHUB_ENV
          else
            echo "branch_name=${{ github.ref }}" >> $GITHUB_ENV
          fi

      - name: Use branch name
        run: echo "Branch name is ${{ env.branch_name }}"

      - name: Set up C++ environment
        run: sudo apt-get install -y g++ make

      - name: Checkout branch
        uses: actions/checkout@v2

      - name: Build with make
        run: |
          ls
          make clean && make
          ./hello
          make clean
          if [ $? -eq 0 ]; then
            echo "Build successful"
          else
            echo "Build failed"
            exit 1
          fi

      - name: Install GitHub CLI
        run: sudo apt-get install -y gh

      - name: Authenticate GitHub CLI
        run: echo ${{ secrets.GITHUB_TOKEN }} | gh auth login --with-token

      - name: Wait for status checks to complete
        if: ${{ github.event_name == 'pull_request' }}
        run: |
          while true; do
            status=$(gh api \
              -H "Accept: application/vnd.github.v3+json" \
              /repos/${{ github.repository }}/commits/${{ github.sha }}/status \
              -q '.statuses[] | select(.context == "build") | .state')

            if [ "$status" = "success" ]; then
              echo "All status checks have passed."
              break
            elif [ "$status" = "failure" ]; then
              echo "A status check has failed."
              exit 1
            else
              echo "Waiting for status checks to complete..."
              sleep 10
            fi
          done

      - name: Merge pull request
        if: ${{ github.event_name == 'pull_request' }}
        run: |
          PR_NUMBER=${{ github.event.pull_request.number }}
          gh pr merge $PR_NUMBER --merge --admin --repo ${{ github.repository }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
